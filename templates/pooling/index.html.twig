{% extends 'base.html.twig' %}

{% block title %}Event source demo{% endblock %}

{% block body %}
<div id="app">
    <ul>
        <li v-for="message in messages">
            {% verbatim %}
            {{ message.id }}
            {% endverbatim %}
        </li>
    </ul>
</div>

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script>
    var app = new Vue({
        el: '#app',
        data: {
            messages: []
        }
    });

    const createSSEConnection = function createSSEConnection() {
        var eventSource = new EventSource('/events');

        eventSource.addEventListener('message', function (event) {
            if ('END-OF-STREAM' === event.data) {
                eventSource.close(); // otherwise it will keep reconnecting
                console.log('stream closed');
                return;
            }

            var data = JSON.parse(event.data);

            console.log(data);

            app.messages.push(data.message);

            eventSource.close()
            setTimeout(createSSEConnection, 200);

        });


        eventSource.addEventListener('error', function (error) {
            console.log(error);
            // Reconnect after a delay
            setTimeout(createSSEConnection, 2000);
        });
    }

    // Start the SSE connection
    createSSEConnection();

    // var eventSource = new EventSource('/events');
    // eventSource.addEventListener('message', function (event) {
    //     if ('END-OF-STREAM' === event.data) {
    //         eventSource.close(); // otherwise it will keep reconnecting
    //
    //         console.log('stream closed');
    //
    //         return;
    //     }
    //
    //     var data = JSON.parse(event.data);
    //
    //     console.log(data);
    //
    //     app.messages.push(data.message);
    // });
    // eventSource.addEventListener('error', function (error) {
    //     console.log(error);
    // });
</script>
{% endblock %}
